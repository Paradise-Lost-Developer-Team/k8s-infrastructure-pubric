apiVersion: apps/v1
kind: Deployment
metadata:
  name: aivis-chan-bot-web
  labels:
    app: aivis-chan-bot-web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: aivis-chan-bot-web
  template:
    metadata:
      labels:
        app: aivis-chan-bot-web
    spec:
      # Ensure the pod can write to the mounted logs volume. We set a pod-level
      # securityContext that uses uid/gid 1000 (common non-root app user) and
      # fsGroup so the volume is group-owned and writable. If your image uses a
      # different UID, adjust runAsUser/fsGroup accordingly.
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      # Init container fixes ownership on the PVC so the non-root app user can write.
      initContainers:
      - name: init-chown-logs
        image: busybox:1.36.1
        securityContext:
          runAsUser: 0
        command: ["sh", "-c", "mkdir -p /var/log/aivis && chown -R 1000:1000 /var/log/aivis || true"]
        volumeMounts:
        - name: aivis-logs
          mountPath: /var/log/aivis
      containers:
      - name: aivis-chan-bot-web
        image: ghcr.io/alexandergg-0520/aivis-chan-bot-web:latest
        ports:
        - containerPort: 3001 # Expressサーバーが3001番でリッスン
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: aivis-chan-bot-web-env
        env:
        - name: GSC_SA_KEY_JSON
          valueFrom:
            secretKeyRef:
              name: gsc-key
              key: GSC_SA_KEY_JSON
        - name: WEBHOOK_LOG_PATH
          value: "/var/log/aivis/webhook-receive.log"
        - name: DATA_DIR
          value: "/data"
        volumeMounts:
        - name: aivis-logs
          mountPath: /var/log/aivis
        - name: aivis-data
          mountPath: /data
      volumes:
      - name: aivis-logs
        persistentVolumeClaim:
          claimName: aivis-chan-bot-web-logs-pvc
      - name: aivis-data
        persistentVolumeClaim:
          claimName: aivis-chan-bot-web-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: aivis-chan-bot-web
spec:
  type: ClusterIP
  selector:
    app: aivis-chan-bot-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001

---
# PersistentVolumeClaim for persisting webhook logs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aivis-chan-bot-web-logs-pvc
  labels:
    app: aivis-chan-bot-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn-static

---
